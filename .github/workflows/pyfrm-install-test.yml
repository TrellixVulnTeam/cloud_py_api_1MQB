name: Test PyFrm install

on:
  workflow_dispatch:

env:
  D_DIR: "./build_tools/docker/test_self_install/"
  D_EXT: ".Dockerfile"

jobs:
  on_linux:
    strategy:
      fail-fast: true
      matrix:
        i: [ { "os": "debian", "ver": "10.11", "arch": "amd64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "debian", "ver": "10.11", "arch": "arm64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "debian", "ver": "11.2", "arch": "amd64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "debian", "ver": "11.2", "arch": "arm64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "ubuntu", "ver": "21.10", "arch": "amd64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "ubuntu", "ver": "21.10", "arch": "arm64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "ubuntu", "ver": "22.04", "arch": "amd64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "ubuntu", "ver": "22.04", "arch": "arm64", "dfile": "debian", "ep": "debian.sh" },
             { "os": "fedora", "ver": "35", "arch": "amd64", "dfile": "fedora", "ep": "fedora.sh" },
             { "os": "fedora", "ver": "35", "arch": "arm64", "dfile": "fedora", "ep": "fedora.sh" } ]
    runs-on: ubuntu-latest
    name: üêç ‚Ä¢ ${{ matrix.i['os'] }} ‚Ä¢ ${{ matrix.i['ver'] }} ‚Ä¢ ${{ matrix.i['arch'] }}
    env:
      KEY_HEAD: ${{ matrix.i['os'] }}-${{ matrix.i['ver'] }}-${{ matrix.i['arch'] }}-cpa_pyfrm_test_sfinst
      D_TAG: ${{ matrix.i['os'] }}-${{ matrix.i['ver'] }}-${{ matrix.i['arch'] }}:cpa_pyfrm_test_sfinst

    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        if: matrix.i['arch'] == 'arm64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ env.KEY_HEAD }}-${{ hashFiles(format('{0}{1}{2}', env.D_DIR, matrix.i['dfile'], env.D_EXT)) }}

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ${{ format('{0}{1}{2}', env.D_DIR,  matrix.i['dfile'], env.D_EXT) }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.D_TAG }}
          platforms: linux/${{ matrix.i['arch'] }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BASE_IMAGE=${{ matrix.i['os'] }}:${{ matrix.i['ver'] }}
            ENTRY_POINT=${{ env.D_DIR }}${{ matrix.i['ep'] }}

# https://github.com/docker/build-push-action/issues/252
# https://github.com/moby/buildkit/issues/1896
      - name: Temp fix - Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Test
        run: docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.D_TAG }}


#             { "os": "alpine", "ver": "3.15", "arch": "amd64", "dfile": "alpine", "ep": "alpine.sh" },
#             { "os": "alpine", "ver": "3.15", "arch": "arm64", "dfile": "alpine", "ep": "alpine.sh" },
# COPY pyfrm ./pyfrm
# Debian:
# 3.7(minimal,+pip) + standalone
#
#  on_macos:
#    strategy:
#      fail-fast: true
#      matrix:
#        python: [ "3.9" , "3.10" , "standalone"]
#    runs-on: macos-latest
#    name: üêç ‚Ä¢ macOS ‚Ä¢ ${{ matrix.python }}  ‚Ä¢ x86_64
#
#    steps:
#      - uses: actions/checkout@v2
