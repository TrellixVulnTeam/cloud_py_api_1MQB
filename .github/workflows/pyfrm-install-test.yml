name: Test PyFrm install

on:
  workflow_dispatch:

env:
  DOCKERFILE_DIR: "./build_tools/docker/test_self_install/"
  DOCKERFILE_EXT: ".Dockerfile"

jobs:
  on_linux_x86_64:
    strategy:
      fail-fast: true
      matrix:
        i: [ {"os": "debian", "ver": "buster", "dockfile": "debian", "ep": "debian.sh"} ]
    runs-on: ubuntu-latest
    name: üêç ‚Ä¢ ${{ matrix.i['os'] }} ‚Ä¢ ${{ matrix.i['ver'] }} ‚Ä¢ x86_64
    env:
      KEY_HEAD: ${{ matrix.i['os'] }}-${{ matrix.i['ver'] }}-x86_64-${{ hashFiles(format('{0}', matrix.i['ep'])) }}
      DOCK_TAG: ${{ matrix.i['os'] }}-${{ matrix.i['ver'] }}-x86_64

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ env.KEY_HEAD }}-buildx

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ${{ format('{0}{1}{2}', env.DOCKERFILE_DIR,  matrix.i['dockfile'], env.DOCKERFILE_EXT) }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCK_TAG }}:cpa_pyfrm_test_sfinst
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BASE_IMAGE=${{ matrix.i['os'] }}:${{ matrix.i['ver'] }}
            ENTRY_POINT=${{ env.DOCKERFILE_DIR }}${{ matrix.i['ep'] }}

# https://github.com/docker/build-push-action/issues/252
# https://github.com/moby/buildkit/issues/1896
      - name: Temp fix - Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Test
        run: docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCK_TAG }}:cpa_pyfrm_test_sfinst

#      - name: Run tests2
#        run: docker run -it self_install_test

#  on_linux_aarch64:
#    strategy:
#      fail-fast: true
#      matrix:
#        image: [ "debian10" ]
#    runs-on: ubuntu-latest
#    name: üêç ‚Ä¢ ${{ matrix.image }} ‚Ä¢ aarch64
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#        with:
#          platforms: arm64
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#        with:
#          buildkitd-flags: --debug
#          install: true
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Run tests
#        run: docker build --file ${{ env.docker_file }} --platform arm64 -t self_install_test .
#        env:
#          docker_file: ${{ env.DOCKER_TEST_FILES_PATH }}${{ matrix.image }}${{ env.TEST_FILES_EXT }}
#
#      - name: Run tests2
#        run: docker run -it self_install_test

# , "debian:bullseye", "ubuntu:21.10", "ubuntu:latest", "alpine:latest", "fedora:latest"
# wih pip
# without pip
#  on_alpine:
#    strategy:
#      fail-fast: true
#      matrix:
#        python: [ "3.8" , "3.9" , "3.10" , "standalone" ]
#        arch: [ x86_64 , aarch64 ]
#    runs-on: ubuntu-latest
#    name: üêç ‚Ä¢ Alpine ‚Ä¢ ${{ matrix.python }} ‚Ä¢ ${{ matrix.arch }}
#
#    steps:
#      - uses: actions/checkout@v2
#
#  on_macos:
#    strategy:
#      fail-fast: true
#      matrix:
#        python: [ "3.9" , "3.10" , "standalone"]
#    runs-on: macos-latest
#    name: üêç ‚Ä¢ macOS ‚Ä¢ ${{ matrix.python }}  ‚Ä¢ x86_64
#
#    steps:
#      - uses: actions/checkout@v2
