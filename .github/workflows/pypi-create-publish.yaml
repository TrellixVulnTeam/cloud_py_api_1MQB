name: Build and publish nc_py_api

on:
  workflow_dispatch:

env:
  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

jobs:

  wheels_any:
    name: Build pure python wheels
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Run cibuildwheel
        working-directory: ./nc_py_api
        run: |
          python -m pip install cibuildwheel twine
          cibuildwheel
        env:
          CIBW_SKIP: "pp*"
          CIBW_TEST_SKIP: "*"
          CIBW_BUILD_VERBOSITY: 1

      - name: Check builded wheels
        run: |
          twine check wheelhouse/*

      - name: Upload builded wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl
          if-no-files-found: error

  sdist:
    name: Source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install requirements
        run: |
          pip install --user check-manifest twine

      - name: Run check-manifest
        working-directory: ./nc_py_api
        run: |
          python -m check_manifest

      - name: Build sdist
        working-directory: ./nc_py_api
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m build --sdist --outdir wheelhouse

      - name: Install from sdist
        run: |
          pip install --user wheelhouse/*.tar.gz

      - name: Check sdist
        run: |
          python -m twine check wheelhouse/*

      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.tar.gz

  publish:
    needs: [sdist, wheels_any]
    runs-on: ubuntu-latest
    steps:
    - name: Collect sdist and wheels
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: wheelhouse

    - name: Publish wheels to PyPI
      run: |
          pip install twine
          ls -la wheelhouse/
          twine upload --skip-existing wheelhouse/*.whl
          twine upload wheelhouse/*tar.gz
