name: Generate Python Standalone archives

on:
  workflow_dispatch:

env:
  URL_BASE: "https://github.com/indygreg/python-build-standalone/releases/download/"
  D_DIR: "./build_tools/docker/py_standalone_create/"
  REL_TAG: "20211017"

jobs:
  on_linux:
    strategy:
      fail-fast: true
      matrix:
        i: [
          { "cpu": "amd64", "os": "manylinux", "d_tag": "centos:7",
            "link": "20211017/cpython-3.10.0-x86_64-unknown-linux-gnu-lto-20211017T1616.tar.zst",
            "add_packages": "pillow pillow_heif hexhamming"
          } ,
          { "cpu": "arm64", "os": "manylinux", "d_tag": "centos:7",
            "link": "20211017/cpython-3.10.0-aarch64-unknown-linux-gnu-lto-20211017T1616.tar.zst",
            "add_packages": "pillow pillow_heif hexhamming"
          } ,
#          { "cpu": "x86_64", "os": "musllinux", "d_tag": "alpine:3.12.9",
#            "link": "",
#            "add_packages": ""
#          } ,
#          { "cpu": "arm64", "os": "musllinux", "d_tag": "alpine:3.12.9",
#            "link": "" ,
#            "add_packages": ""
#          } ,
        ]
    runs-on: ubuntu-latest
    name: üêç ‚Ä¢ ${{ matrix.i['cpu'] }} ‚Ä¢ ${{ matrix.i['os'] }}
    env:
      KEY_HEAD: ${{ format('{0}{1}{2}$REL_TAG-py_std', matrix.i['cpu'], matrix.i['os'], matrix.i['d_tag']) }}
#      ${{ matrix.i['cpu'] }}-${{ matrix.i['os'] }}-${{ matrix.i['d_tag'] }}-${{ env.REL_TAG }}-py_std
      D_TAG: ${{ matrix.i['cpu'] }}-${{ matrix.i['os'] }}-${{ matrix.i['d_tag'] }}:py_std

    steps:
      - uses: actions/checkout@v2
      - name: Initializing
        run: |
          wget $URL_BASE${{ matrix.i['link'] }} -O standalone.tar.zst
          wget https://github.com/indygreg/python-build-standalone/blob/main/LICENSE -O LICENSE
          mkdir /pythons
      - name: Set up QEMU
        if: matrix.i['cpu'] == 'arm64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ env.KEY_HEAD }}-${{ matrix.i['add_packages'] }}

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ${{ env.D_DIR }}${{ matrix.i['os'] }}.Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.D_TAG }}
          platforms: linux/${{ matrix.i['cpu'] }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BASE_IMAGE=${{ matrix.i['d_tag'] }}
            ENTRY_POINT=${{ env.D_DIR }}${{ matrix.i['os'] }}.sh
            ADD_PACKAGES=${{ matrix.i['add_packages'] }}
            OUT_NAME=st_python_${{ matrix.i['cpu'] }}_${{ matrix.i['os'] }}.tar.zst

      - name: Temp fix - Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Test
        run: docker run -v /:/host --rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.D_TAG }}

      - uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: pythons/*.tar.zst
          if-no-files-found: error

      - name: Create release draft
        uses: ncipollo/release-action@v1.8.8
        with:
          name: ${{ format('indygreg python-standalone {0}', env.REL_TAG) }}
          tag: v${{ env.REL_TAG }}
          commit: ${{ github.ref }}
          draft: true
          body: "Generated based on https://github.com/indygreg/python-build-standalone/releases"
          artifacts: pythons/*
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactErrorsFailBuild: true
