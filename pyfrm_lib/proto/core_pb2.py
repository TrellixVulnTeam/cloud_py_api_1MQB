# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\ncore.proto\"\x07\n\x05\x45mpty\"\xc8\x01\n\rTaskInitReply\x12\x10\n\x08\x66ilePath\x18\x01 \x01(\t\x12\x10\n\x08\x66uncName\x18\x02 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x03 \x03(\t\x12)\n\x06\x63onfig\x18\x04 \x01(\x0b\x32\x19.TaskInitReply.cfgOptions\x1aZ\n\ncfgOptions\x12\x18\n\x07log_lvl\x18\x01 \x01(\x0e\x32\x07.logLvl\x12\x12\n\ndataFolder\x18\x02 \x01(\t\x12\x1e\n\x16\x66rameworkAppDataFolder\x18\x03 \x01(\t\"@\n\x11TaskStatusRequest\x12\x1c\n\x07st_code\x18\x01 \x01(\x0e\x32\x0b.taskStatus\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"!\n\x0fTaskExitRequest\x12\x0e\n\x06result\x18\x01 \x01(\t\"\x1e\n\x0eTaskStateReply\x12\x0c\n\x04stop\x18\x01 \x01(\x08\"K\n\x0eTaskLogRequest\x12\x18\n\x07log_lvl\x18\x01 \x01(\x0e\x32\x07.logLvl\x12\x0e\n\x06module\x18\x02 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x03 \x03(\t\"&\n\x04\x66sId\x12\x0e\n\x06userId\x18\x01 \x01(\t\x12\x0e\n\x06\x66ileId\x18\x02 \x01(\t\")\n\x10\x46sGetInfoRequest\x12\x15\n\x06\x66ileId\x18\x01 \x01(\x0b\x32\x05.fsId\"\xae\x02\n\x0e\x46sGetInfoReply\x12\x15\n\x06\x66ileId\x18\x01 \x01(\x0b\x32\x05.fsId\x12\x0e\n\x06is_dir\x18\x02 \x01(\x08\x12\x10\n\x08is_local\x18\x03 \x01(\x08\x12\x10\n\x08mimetype\x18\x04 \x01(\t\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\x15\n\rinternal_path\x18\x06 \x01(\t\x12\x10\n\x08\x61\x62s_path\x18\x07 \x01(\t\x12\x0c\n\x04size\x18\x08 \x01(\x03\x12\x13\n\x0bpermissions\x18\t \x01(\x03\x12\r\n\x05mtime\x18\n \x01(\x03\x12\x10\n\x08\x63hecksum\x18\x0b \x01(\t\x12\x11\n\tencrypted\x18\x0c \x01(\x08\x12\x0c\n\x04\x65tag\x18\r \x01(\t\x12\x11\n\townerName\x18\x0e \x01(\t\x12\x11\n\tstorageId\x18\x0f \x01(\x03\x12\x0f\n\x07mountId\x18\x10 \x01(\x03\"%\n\rFsListRequest\x12\x14\n\x05\x64irId\x18\x01 \x01(\x0b\x32\x05.fsId\"-\n\x0b\x46sListReply\x12\x1e\n\x05nodes\x18\x01 \x03(\x0b\x32\x0f.FsGetInfoReply\"&\n\rFsReadRequest\x12\x15\n\x06\x66ileId\x18\x01 \x01(\x0b\x32\x05.fsId\">\n\x0b\x46sReadReply\x12\x1e\n\x07resCode\x18\x01 \x01(\x0e\x32\r.fsResultCode\x12\x0f\n\x07\x63ontent\x18\x02 \x01(\x0c\"]\n\x0f\x46sCreateRequest\x12\x1a\n\x0bparentDirId\x18\x01 \x01(\x0b\x32\x05.fsId\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0f\n\x07is_file\x18\x03 \x01(\x08\x12\x0f\n\x07\x63ontent\x18\x04 \x01(\x0c\"8\n\x0e\x46sWriteRequest\x12\x15\n\x06\x66ileId\x18\x01 \x01(\x0b\x32\x05.fsId\x12\x0f\n\x07\x63ontent\x18\x02 \x01(\x0c\"(\n\x0f\x46sDeleteRequest\x12\x15\n\x06\x66ileId\x18\x01 \x01(\x0b\x32\x05.fsId\"I\n\rFsMoveRequest\x12\x15\n\x06\x66ileId\x18\x01 \x01(\x0b\x32\x05.fsId\x12\x12\n\ntargetPath\x18\x02 \x01(\t\x12\r\n\x05\x62\x43opy\x18\x03 \x01(\x08\")\n\x07\x46sReply\x12\x1e\n\x07resCode\x18\x01 \x01(\x0e\x32\r.fsResultCode\"-\n\twhereExpr\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x12\n\nexpression\x18\x02 \x01(\t\"(\n\tstr_alias\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05\x61lias\x18\x02 \x01(\t\"\x95\x03\n\x0f\x44\x62SelectRequest\x12\x1b\n\x07\x63olumns\x18\x01 \x03(\x0b\x32\n.str_alias\x12\x18\n\x04\x66rom\x18\x02 \x03(\x0b\x32\n.str_alias\x12(\n\x05joins\x18\x03 \x03(\x0b\x32\x19.DbSelectRequest.joinType\x12\x1b\n\x07whereas\x18\x04 \x03(\x0b\x32\n.whereExpr\x12\x0f\n\x07groupBy\x18\x05 \x03(\t\x12,\n\x07havings\x18\x06 \x03(\x0b\x32\x1b.DbSelectRequest.havingExpr\x12\x0f\n\x07orderBy\x18\x07 \x03(\t\x12\x12\n\nmaxResults\x18\x08 \x01(\x03\x12\x13\n\x0b\x66irstResult\x18\t \x01(\x03\x1a[\n\x08joinType\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tfromAlias\x18\x02 \x01(\t\x12\x0c\n\x04join\x18\x03 \x01(\t\x12\r\n\x05\x61lias\x18\x04 \x01(\t\x12\x11\n\tcondition\x18\x05 \x01(\t\x1a.\n\nhavingExpr\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x12\n\nexpression\x18\x02 \x01(\t\"@\n\rDbSelectReply\x12\x10\n\x08rowCount\x18\x01 \x01(\x03\x12\r\n\x05\x65rror\x18\x02 \x01(\t\x12\x0e\n\x06handle\x18\x03 \x01(\x03\"r\n\x0f\x44\x62\x43ursorRequest\x12\"\n\x03\x63md\x18\x01 \x01(\x0e\x32\x15.DbCursorRequest.cCmd\x12\x0e\n\x06handle\x18\x02 \x01(\x03\"+\n\x04\x63\x43md\x12\t\n\x05\x46\x45TCH\x10\x00\x12\r\n\tFETCH_ALL\x10\x01\x12\t\n\x05\x43LOSE\x10\x02\"\x91\x01\n\rDbCursorReply\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12\x13\n\x0b\x63olumnsName\x18\x02 \x03(\t\x12.\n\x0b\x63olumnsData\x18\x03 \x03(\x0b\x32\x19.DbCursorReply.columnData\x1a,\n\ncolumnData\x12\x10\n\x08\x62Present\x18\x01 \x01(\x08\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\"\xb2\x01\n\rDbExecRequest\x12\"\n\x04type\x18\x01 \x01(\x0e\x32\x14.DbExecRequest.rType\x12\x12\n\ntable_name\x18\x02 \x01(\t\x12\x0f\n\x07\x63olumns\x18\x03 \x03(\t\x12\x0e\n\x06values\x18\x04 \x03(\x0c\x12\x1b\n\x07whereas\x18\x05 \x03(\x0b\x32\n.whereExpr\"+\n\x05rType\x12\n\n\x06INSERT\x10\x00\x12\n\n\x06UPDATE\x10\x01\x12\n\n\x06\x44\x45LETE\x10\x02\"3\n\x0b\x44\x62\x45xecReply\x12\x15\n\rnAffectedRows\x18\x01 \x01(\x03\x12\r\n\x05\x65rror\x18\x02 \x01(\t*=\n\x06logLvl\x12\t\n\x05\x44\x45\x42UG\x10\x00\x12\x08\n\x04INFO\x10\x01\x12\x08\n\x04WARN\x10\x02\x12\t\n\x05\x45RROR\x10\x03\x12\t\n\x05\x46\x41TAL\x10\x04*s\n\ntaskStatus\x12\x0e\n\nST_SUCCESS\x10\x00\x12\x12\n\x0eST_IN_PROGRESS\x10\x01\x12\x11\n\rST_INIT_ERROR\x10\x02\x12\x10\n\x0cST_EXCEPTION\x10\x03\x12\x0c\n\x08ST_ERROR\x10\x04\x12\x0e\n\nST_UNKNOWN\x10\x05*X\n\x0c\x66sResultCode\x12\x0c\n\x08NO_ERROR\x10\x00\x12\x11\n\rNOT_PERMITTED\x10\x01\x12\n\n\x06LOCKED\x10\x02\x12\r\n\tNOT_FOUND\x10\x03\x12\x0c\n\x08IO_ERROR\x10\x04\x32\x89\x05\n\x0e\x43loudPyApiCore\x12$\n\x08TaskInit\x12\x06.Empty\x1a\x0e.TaskInitReply\"\x00\x12*\n\nTaskStatus\x12\x12.TaskStatusRequest\x1a\x06.Empty\"\x00\x12&\n\x08TaskExit\x12\x10.TaskExitRequest\x1a\x06.Empty\"\x00\x12&\n\tTaskState\x12\x06.Empty\x1a\x0f.TaskStateReply\"\x00\x12$\n\x07TaskLog\x12\x0f.TaskLogRequest\x1a\x06.Empty\"\x00\x12+\n\tFsGetInfo\x12\x0e.FsListRequest\x1a\x0c.FsListReply\"\x00\x12(\n\x06\x46sList\x12\x0e.FsListRequest\x1a\x0c.FsListReply\"\x00\x12*\n\x06\x46sRead\x12\x0e.FsReadRequest\x1a\x0c.FsReadReply\"\x00\x30\x01\x12(\n\x08\x46sCreate\x12\x10.FsCreateRequest\x1a\x08.FsReply\"\x00\x12(\n\x07\x46sWrite\x12\x0f.FsWriteRequest\x1a\x08.FsReply\"\x00(\x01\x12(\n\x08\x46sDelete\x12\x10.FsDeleteRequest\x1a\x08.FsReply\"\x00\x12$\n\x06\x46sMove\x12\x0e.FsMoveRequest\x1a\x08.FsReply\"\x00\x12.\n\x08\x44\x62Select\x12\x10.DbSelectRequest\x1a\x0e.DbSelectReply\"\x00\x12.\n\x08\x44\x62\x43ursor\x12\x10.DbCursorRequest\x1a\x0e.DbCursorReply\"\x00\x12(\n\x06\x44\x62\x45xec\x12\x0e.DbExecRequest\x1a\x0c.DbExecReply\"\x00\x62\x06proto3')

_LOGLVL = DESCRIPTOR.enum_types_by_name['logLvl']
logLvl = enum_type_wrapper.EnumTypeWrapper(_LOGLVL)
_TASKSTATUS = DESCRIPTOR.enum_types_by_name['taskStatus']
taskStatus = enum_type_wrapper.EnumTypeWrapper(_TASKSTATUS)
_FSRESULTCODE = DESCRIPTOR.enum_types_by_name['fsResultCode']
fsResultCode = enum_type_wrapper.EnumTypeWrapper(_FSRESULTCODE)
DEBUG = 0
INFO = 1
WARN = 2
ERROR = 3
FATAL = 4
ST_SUCCESS = 0
ST_IN_PROGRESS = 1
ST_INIT_ERROR = 2
ST_EXCEPTION = 3
ST_ERROR = 4
ST_UNKNOWN = 5
NO_ERROR = 0
NOT_PERMITTED = 1
LOCKED = 2
NOT_FOUND = 3
IO_ERROR = 4


_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_TASKINITREPLY = DESCRIPTOR.message_types_by_name['TaskInitReply']
_TASKINITREPLY_CFGOPTIONS = _TASKINITREPLY.nested_types_by_name['cfgOptions']
_TASKSTATUSREQUEST = DESCRIPTOR.message_types_by_name['TaskStatusRequest']
_TASKEXITREQUEST = DESCRIPTOR.message_types_by_name['TaskExitRequest']
_TASKSTATEREPLY = DESCRIPTOR.message_types_by_name['TaskStateReply']
_TASKLOGREQUEST = DESCRIPTOR.message_types_by_name['TaskLogRequest']
_FSID = DESCRIPTOR.message_types_by_name['fsId']
_FSGETINFOREQUEST = DESCRIPTOR.message_types_by_name['FsGetInfoRequest']
_FSGETINFOREPLY = DESCRIPTOR.message_types_by_name['FsGetInfoReply']
_FSLISTREQUEST = DESCRIPTOR.message_types_by_name['FsListRequest']
_FSLISTREPLY = DESCRIPTOR.message_types_by_name['FsListReply']
_FSREADREQUEST = DESCRIPTOR.message_types_by_name['FsReadRequest']
_FSREADREPLY = DESCRIPTOR.message_types_by_name['FsReadReply']
_FSCREATEREQUEST = DESCRIPTOR.message_types_by_name['FsCreateRequest']
_FSWRITEREQUEST = DESCRIPTOR.message_types_by_name['FsWriteRequest']
_FSDELETEREQUEST = DESCRIPTOR.message_types_by_name['FsDeleteRequest']
_FSMOVEREQUEST = DESCRIPTOR.message_types_by_name['FsMoveRequest']
_FSREPLY = DESCRIPTOR.message_types_by_name['FsReply']
_WHEREEXPR = DESCRIPTOR.message_types_by_name['whereExpr']
_STR_ALIAS = DESCRIPTOR.message_types_by_name['str_alias']
_DBSELECTREQUEST = DESCRIPTOR.message_types_by_name['DbSelectRequest']
_DBSELECTREQUEST_JOINTYPE = _DBSELECTREQUEST.nested_types_by_name['joinType']
_DBSELECTREQUEST_HAVINGEXPR = _DBSELECTREQUEST.nested_types_by_name['havingExpr']
_DBSELECTREPLY = DESCRIPTOR.message_types_by_name['DbSelectReply']
_DBCURSORREQUEST = DESCRIPTOR.message_types_by_name['DbCursorRequest']
_DBCURSORREPLY = DESCRIPTOR.message_types_by_name['DbCursorReply']
_DBCURSORREPLY_COLUMNDATA = _DBCURSORREPLY.nested_types_by_name['columnData']
_DBEXECREQUEST = DESCRIPTOR.message_types_by_name['DbExecRequest']
_DBEXECREPLY = DESCRIPTOR.message_types_by_name['DbExecReply']
_DBCURSORREQUEST_CCMD = _DBCURSORREQUEST.enum_types_by_name['cCmd']
_DBEXECREQUEST_RTYPE = _DBEXECREQUEST.enum_types_by_name['rType']
Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  })
_sym_db.RegisterMessage(Empty)

TaskInitReply = _reflection.GeneratedProtocolMessageType('TaskInitReply', (_message.Message,), {

  'cfgOptions' : _reflection.GeneratedProtocolMessageType('cfgOptions', (_message.Message,), {
    'DESCRIPTOR' : _TASKINITREPLY_CFGOPTIONS,
    '__module__' : 'core_pb2'
    # @@protoc_insertion_point(class_scope:TaskInitReply.cfgOptions)
    })
  ,
  'DESCRIPTOR' : _TASKINITREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:TaskInitReply)
  })
_sym_db.RegisterMessage(TaskInitReply)
_sym_db.RegisterMessage(TaskInitReply.cfgOptions)

TaskStatusRequest = _reflection.GeneratedProtocolMessageType('TaskStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _TASKSTATUSREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:TaskStatusRequest)
  })
_sym_db.RegisterMessage(TaskStatusRequest)

TaskExitRequest = _reflection.GeneratedProtocolMessageType('TaskExitRequest', (_message.Message,), {
  'DESCRIPTOR' : _TASKEXITREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:TaskExitRequest)
  })
_sym_db.RegisterMessage(TaskExitRequest)

TaskStateReply = _reflection.GeneratedProtocolMessageType('TaskStateReply', (_message.Message,), {
  'DESCRIPTOR' : _TASKSTATEREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:TaskStateReply)
  })
_sym_db.RegisterMessage(TaskStateReply)

TaskLogRequest = _reflection.GeneratedProtocolMessageType('TaskLogRequest', (_message.Message,), {
  'DESCRIPTOR' : _TASKLOGREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:TaskLogRequest)
  })
_sym_db.RegisterMessage(TaskLogRequest)

fsId = _reflection.GeneratedProtocolMessageType('fsId', (_message.Message,), {
  'DESCRIPTOR' : _FSID,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:fsId)
  })
_sym_db.RegisterMessage(fsId)

FsGetInfoRequest = _reflection.GeneratedProtocolMessageType('FsGetInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSGETINFOREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsGetInfoRequest)
  })
_sym_db.RegisterMessage(FsGetInfoRequest)

FsGetInfoReply = _reflection.GeneratedProtocolMessageType('FsGetInfoReply', (_message.Message,), {
  'DESCRIPTOR' : _FSGETINFOREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsGetInfoReply)
  })
_sym_db.RegisterMessage(FsGetInfoReply)

FsListRequest = _reflection.GeneratedProtocolMessageType('FsListRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSLISTREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsListRequest)
  })
_sym_db.RegisterMessage(FsListRequest)

FsListReply = _reflection.GeneratedProtocolMessageType('FsListReply', (_message.Message,), {
  'DESCRIPTOR' : _FSLISTREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsListReply)
  })
_sym_db.RegisterMessage(FsListReply)

FsReadRequest = _reflection.GeneratedProtocolMessageType('FsReadRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSREADREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsReadRequest)
  })
_sym_db.RegisterMessage(FsReadRequest)

FsReadReply = _reflection.GeneratedProtocolMessageType('FsReadReply', (_message.Message,), {
  'DESCRIPTOR' : _FSREADREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsReadReply)
  })
_sym_db.RegisterMessage(FsReadReply)

FsCreateRequest = _reflection.GeneratedProtocolMessageType('FsCreateRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSCREATEREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsCreateRequest)
  })
_sym_db.RegisterMessage(FsCreateRequest)

FsWriteRequest = _reflection.GeneratedProtocolMessageType('FsWriteRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSWRITEREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsWriteRequest)
  })
_sym_db.RegisterMessage(FsWriteRequest)

FsDeleteRequest = _reflection.GeneratedProtocolMessageType('FsDeleteRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSDELETEREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsDeleteRequest)
  })
_sym_db.RegisterMessage(FsDeleteRequest)

FsMoveRequest = _reflection.GeneratedProtocolMessageType('FsMoveRequest', (_message.Message,), {
  'DESCRIPTOR' : _FSMOVEREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsMoveRequest)
  })
_sym_db.RegisterMessage(FsMoveRequest)

FsReply = _reflection.GeneratedProtocolMessageType('FsReply', (_message.Message,), {
  'DESCRIPTOR' : _FSREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:FsReply)
  })
_sym_db.RegisterMessage(FsReply)

whereExpr = _reflection.GeneratedProtocolMessageType('whereExpr', (_message.Message,), {
  'DESCRIPTOR' : _WHEREEXPR,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:whereExpr)
  })
_sym_db.RegisterMessage(whereExpr)

str_alias = _reflection.GeneratedProtocolMessageType('str_alias', (_message.Message,), {
  'DESCRIPTOR' : _STR_ALIAS,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:str_alias)
  })
_sym_db.RegisterMessage(str_alias)

DbSelectRequest = _reflection.GeneratedProtocolMessageType('DbSelectRequest', (_message.Message,), {

  'joinType' : _reflection.GeneratedProtocolMessageType('joinType', (_message.Message,), {
    'DESCRIPTOR' : _DBSELECTREQUEST_JOINTYPE,
    '__module__' : 'core_pb2'
    # @@protoc_insertion_point(class_scope:DbSelectRequest.joinType)
    })
  ,

  'havingExpr' : _reflection.GeneratedProtocolMessageType('havingExpr', (_message.Message,), {
    'DESCRIPTOR' : _DBSELECTREQUEST_HAVINGEXPR,
    '__module__' : 'core_pb2'
    # @@protoc_insertion_point(class_scope:DbSelectRequest.havingExpr)
    })
  ,
  'DESCRIPTOR' : _DBSELECTREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:DbSelectRequest)
  })
_sym_db.RegisterMessage(DbSelectRequest)
_sym_db.RegisterMessage(DbSelectRequest.joinType)
_sym_db.RegisterMessage(DbSelectRequest.havingExpr)

DbSelectReply = _reflection.GeneratedProtocolMessageType('DbSelectReply', (_message.Message,), {
  'DESCRIPTOR' : _DBSELECTREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:DbSelectReply)
  })
_sym_db.RegisterMessage(DbSelectReply)

DbCursorRequest = _reflection.GeneratedProtocolMessageType('DbCursorRequest', (_message.Message,), {
  'DESCRIPTOR' : _DBCURSORREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:DbCursorRequest)
  })
_sym_db.RegisterMessage(DbCursorRequest)

DbCursorReply = _reflection.GeneratedProtocolMessageType('DbCursorReply', (_message.Message,), {

  'columnData' : _reflection.GeneratedProtocolMessageType('columnData', (_message.Message,), {
    'DESCRIPTOR' : _DBCURSORREPLY_COLUMNDATA,
    '__module__' : 'core_pb2'
    # @@protoc_insertion_point(class_scope:DbCursorReply.columnData)
    })
  ,
  'DESCRIPTOR' : _DBCURSORREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:DbCursorReply)
  })
_sym_db.RegisterMessage(DbCursorReply)
_sym_db.RegisterMessage(DbCursorReply.columnData)

DbExecRequest = _reflection.GeneratedProtocolMessageType('DbExecRequest', (_message.Message,), {
  'DESCRIPTOR' : _DBEXECREQUEST,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:DbExecRequest)
  })
_sym_db.RegisterMessage(DbExecRequest)

DbExecReply = _reflection.GeneratedProtocolMessageType('DbExecReply', (_message.Message,), {
  'DESCRIPTOR' : _DBEXECREPLY,
  '__module__' : 'core_pb2'
  # @@protoc_insertion_point(class_scope:DbExecReply)
  })
_sym_db.RegisterMessage(DbExecReply)

_CLOUDPYAPICORE = DESCRIPTOR.services_by_name['CloudPyApiCore']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LOGLVL._serialized_start=2388
  _LOGLVL._serialized_end=2449
  _TASKSTATUS._serialized_start=2451
  _TASKSTATUS._serialized_end=2566
  _FSRESULTCODE._serialized_start=2568
  _FSRESULTCODE._serialized_end=2656
  _EMPTY._serialized_start=14
  _EMPTY._serialized_end=21
  _TASKINITREPLY._serialized_start=24
  _TASKINITREPLY._serialized_end=224
  _TASKINITREPLY_CFGOPTIONS._serialized_start=134
  _TASKINITREPLY_CFGOPTIONS._serialized_end=224
  _TASKSTATUSREQUEST._serialized_start=226
  _TASKSTATUSREQUEST._serialized_end=290
  _TASKEXITREQUEST._serialized_start=292
  _TASKEXITREQUEST._serialized_end=325
  _TASKSTATEREPLY._serialized_start=327
  _TASKSTATEREPLY._serialized_end=357
  _TASKLOGREQUEST._serialized_start=359
  _TASKLOGREQUEST._serialized_end=434
  _FSID._serialized_start=436
  _FSID._serialized_end=474
  _FSGETINFOREQUEST._serialized_start=476
  _FSGETINFOREQUEST._serialized_end=517
  _FSGETINFOREPLY._serialized_start=520
  _FSGETINFOREPLY._serialized_end=822
  _FSLISTREQUEST._serialized_start=824
  _FSLISTREQUEST._serialized_end=861
  _FSLISTREPLY._serialized_start=863
  _FSLISTREPLY._serialized_end=908
  _FSREADREQUEST._serialized_start=910
  _FSREADREQUEST._serialized_end=948
  _FSREADREPLY._serialized_start=950
  _FSREADREPLY._serialized_end=1012
  _FSCREATEREQUEST._serialized_start=1014
  _FSCREATEREQUEST._serialized_end=1107
  _FSWRITEREQUEST._serialized_start=1109
  _FSWRITEREQUEST._serialized_end=1165
  _FSDELETEREQUEST._serialized_start=1167
  _FSDELETEREQUEST._serialized_end=1207
  _FSMOVEREQUEST._serialized_start=1209
  _FSMOVEREQUEST._serialized_end=1282
  _FSREPLY._serialized_start=1284
  _FSREPLY._serialized_end=1325
  _WHEREEXPR._serialized_start=1327
  _WHEREEXPR._serialized_end=1372
  _STR_ALIAS._serialized_start=1374
  _STR_ALIAS._serialized_end=1414
  _DBSELECTREQUEST._serialized_start=1417
  _DBSELECTREQUEST._serialized_end=1822
  _DBSELECTREQUEST_JOINTYPE._serialized_start=1683
  _DBSELECTREQUEST_JOINTYPE._serialized_end=1774
  _DBSELECTREQUEST_HAVINGEXPR._serialized_start=1776
  _DBSELECTREQUEST_HAVINGEXPR._serialized_end=1822
  _DBSELECTREPLY._serialized_start=1824
  _DBSELECTREPLY._serialized_end=1888
  _DBCURSORREQUEST._serialized_start=1890
  _DBCURSORREQUEST._serialized_end=2004
  _DBCURSORREQUEST_CCMD._serialized_start=1961
  _DBCURSORREQUEST_CCMD._serialized_end=2004
  _DBCURSORREPLY._serialized_start=2007
  _DBCURSORREPLY._serialized_end=2152
  _DBCURSORREPLY_COLUMNDATA._serialized_start=2108
  _DBCURSORREPLY_COLUMNDATA._serialized_end=2152
  _DBEXECREQUEST._serialized_start=2155
  _DBEXECREQUEST._serialized_end=2333
  _DBEXECREQUEST_RTYPE._serialized_start=2290
  _DBEXECREQUEST_RTYPE._serialized_end=2333
  _DBEXECREPLY._serialized_start=2335
  _DBEXECREPLY._serialized_end=2386
  _CLOUDPYAPICORE._serialized_start=2659
  _CLOUDPYAPICORE._serialized_end=3308
# @@protoc_insertion_point(module_scope)
