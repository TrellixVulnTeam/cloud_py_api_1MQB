<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/core.proto

/**
 * Protobuf type <code>msgClass</code>
 */
class msgClass
{
    /**
     * Generated from protobuf enum <code>RESERVED = 0;</code>
     */
    const RESERVED = 0;
    /**
     * Generated from protobuf enum <code>INIT_TASK = 1;</code>
     */
    const INIT_TASK = 1;
    /**
     * Generated from protobuf enum <code>TASK_STATUS = 2;</code>
     */
    const TASK_STATUS = 2;
    /**
     * Generated from protobuf enum <code>TASK_EXIT = 3;</code>
     */
    const TASK_EXIT = 3;
    /**
     * Generated from protobuf enum <code>GET_STATE = 4;</code>
     */
    const GET_STATE = 4;
    /**
     *Reserved for future addon for multithreading requests.
     *
     * Generated from protobuf enum <code>OPEN_CHANNEL = 5;</code>
     */
    const OPEN_CHANNEL = 5;
    /**
     * Generated from protobuf enum <code>LOG = 6;</code>
     */
    const LOG = 6;
    /**
     *FileInfo ?
     *
     * Generated from protobuf enum <code>GET_FILE_INFO = 7;</code>
     */
    const GET_FILE_INFO = 7;
    /**
     * Generated from protobuf enum <code>READ_FILE = 8;</code>
     */
    const READ_FILE = 8;
    /**
     * Generated from protobuf enum <code>CREATE_FILE = 9;</code>
     */
    const CREATE_FILE = 9;
    /**
     * Generated from protobuf enum <code>WRITE_FILE = 10;</code>
     */
    const WRITE_FILE = 10;
    /**
     * Generated from protobuf enum <code>DELETE_FILE = 11;</code>
     */
    const DELETE_FILE = 11;
    /**
     *rmvOriginal flag something like -> copyFromStorage
     *
     * Generated from protobuf enum <code>MOVE_FILE = 12;</code>
     */
    const MOVE_FILE = 12;
    /**
     *getDirectoryListing
     *
     * Generated from protobuf enum <code>GET_DIR_LISTING = 13;</code>
     */
    const GET_DIR_LISTING = 13;
    /**
     * Generated from protobuf enum <code>SELECT = 14;</code>
     */
    const SELECT = 14;
    /**
     * Generated from protobuf enum <code>CURSOR = 15;</code>
     */
    const CURSOR = 15;
    /**
     *Insert/Update/Delete
     *
     * Generated from protobuf enum <code>EXEC_STATEMENT = 16;</code>
     */
    const EXEC_STATEMENT = 16;
    /**
     * Generated from protobuf enum <code>EXEC_STATEMENT_REPLY = 17;</code>
     */
    const EXEC_STATEMENT_REPLY = 17;

    private static $valueToName = [
        self::RESERVED => 'RESERVED',
        self::INIT_TASK => 'INIT_TASK',
        self::TASK_STATUS => 'TASK_STATUS',
        self::TASK_EXIT => 'TASK_EXIT',
        self::GET_STATE => 'GET_STATE',
        self::OPEN_CHANNEL => 'OPEN_CHANNEL',
        self::LOG => 'LOG',
        self::GET_FILE_INFO => 'GET_FILE_INFO',
        self::READ_FILE => 'READ_FILE',
        self::CREATE_FILE => 'CREATE_FILE',
        self::WRITE_FILE => 'WRITE_FILE',
        self::DELETE_FILE => 'DELETE_FILE',
        self::MOVE_FILE => 'MOVE_FILE',
        self::GET_DIR_LISTING => 'GET_DIR_LISTING',
        self::SELECT => 'SELECT',
        self::CURSOR => 'CURSOR',
        self::EXEC_STATEMENT => 'EXEC_STATEMENT',
        self::EXEC_STATEMENT_REPLY => 'EXEC_STATEMENT_REPLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

