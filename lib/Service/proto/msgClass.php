<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core.proto

/**
 * Protobuf type <code>msgClass</code>
 */
class msgClass
{
    /**
     * Generated from protobuf enum <code>RESERVED = 0;</code>
     */
    const RESERVED = 0;
    /**
     * Generated from protobuf enum <code>TASK_INIT = 1;</code>
     */
    const TASK_INIT = 1;
    /**
     * Generated from protobuf enum <code>TASK_STATUS = 2;</code>
     */
    const TASK_STATUS = 2;
    /**
     * Generated from protobuf enum <code>TASK_EXIT = 3;</code>
     */
    const TASK_EXIT = 3;
    /**
     * Generated from protobuf enum <code>TASK_GET_STATE = 4;</code>
     */
    const TASK_GET_STATE = 4;
    /**
     * Generated from protobuf enum <code>TASK_LOG = 5;</code>
     */
    const TASK_LOG = 5;
    /**
     *Reserved for future addon for multithreading requests.
     *
     * Generated from protobuf enum <code>OPEN_CHANNEL = 6;</code>
     */
    const OPEN_CHANNEL = 6;
    /**
     *getDirectoryListing
     *
     * Generated from protobuf enum <code>FS_LIST = 7;</code>
     */
    const FS_LIST = 7;
    /**
     *FileInfo ?
     *
     * Generated from protobuf enum <code>FS_GET_INFO = 8;</code>
     */
    const FS_GET_INFO = 8;
    /**
     * Generated from protobuf enum <code>FS_READ = 9;</code>
     */
    const FS_READ = 9;
    /**
     * Generated from protobuf enum <code>FS_CREATE = 10;</code>
     */
    const FS_CREATE = 10;
    /**
     * Generated from protobuf enum <code>FS_WRITE = 11;</code>
     */
    const FS_WRITE = 11;
    /**
     * Generated from protobuf enum <code>FS_DELETE = 12;</code>
     */
    const FS_DELETE = 12;
    /**
     *rmvOriginal flag something like -> copyFromStorage
     *
     * Generated from protobuf enum <code>FS_MOVE = 13;</code>
     */
    const FS_MOVE = 13;
    /**
     * Generated from protobuf enum <code>DB_SELECT = 14;</code>
     */
    const DB_SELECT = 14;
    /**
     * Generated from protobuf enum <code>DB_CURSOR = 15;</code>
     */
    const DB_CURSOR = 15;
    /**
     *Insert/Update/Delete
     *
     * Generated from protobuf enum <code>DB_EXEC = 16;</code>
     */
    const DB_EXEC = 16;

    private static $valueToName = [
        self::RESERVED => 'RESERVED',
        self::TASK_INIT => 'TASK_INIT',
        self::TASK_STATUS => 'TASK_STATUS',
        self::TASK_EXIT => 'TASK_EXIT',
        self::TASK_GET_STATE => 'TASK_GET_STATE',
        self::TASK_LOG => 'TASK_LOG',
        self::OPEN_CHANNEL => 'OPEN_CHANNEL',
        self::FS_LIST => 'FS_LIST',
        self::FS_GET_INFO => 'FS_GET_INFO',
        self::FS_READ => 'FS_READ',
        self::FS_CREATE => 'FS_CREATE',
        self::FS_WRITE => 'FS_WRITE',
        self::FS_DELETE => 'FS_DELETE',
        self::FS_MOVE => 'FS_MOVE',
        self::DB_SELECT => 'DB_SELECT',
        self::DB_CURSOR => 'DB_CURSOR',
        self::DB_EXEC => 'DB_EXEC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

